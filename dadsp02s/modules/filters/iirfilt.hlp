@modeless 1

    IIRFILTER  

    Purpose: 
             Filters a series with a cascade filter directly in the time
             domain.
                                                                        
    Format:  
             IIRFILTER(x, c)

                x - a series, the input to filter

                c - A series, the system coefficients in cascaded 
                    biquad form.  If C contains 2 columns, c is assumed
                    to be in direct form, where the first column is B
                    and the second column is A.

    Returns: 
             A series, the result of filtering the input data with the
             filter.

    Example:
             W1: gsweep(100, 1/100, 1, 40)
             W2: butterworth(1, 100.0, 10.0)
             W3: iirfilter(w1, w2)

             W1 contains a linear swept sinewave from 1 to 40 Hz.  W2
             contains a 10 Hz lowpass Butterworth filter and W3
             displays the result of filtering the swept sinewave with
             the lowpass filter.  The filter coefficients are in
             cascade form.

    Example:
             W1: gsweep(100, 1/100, 1, 40)
             W2: butterworth(1, 100.0, 10.0)
             W3: cas2dir(w2)
             W4: iirfilter(w1, w3)

             Same as the previous example except the filter coefficients
             are in Direct Form.

    Remarks:
             IIRFILTER uses CASCADE to evaluate the following Z transform:

                               -1       -2                -1       -2
                    b10 + b11 z  + b12 z       b20 + b21 z  + b22 z
         H(z) = G * ________________________ *  ________________________ ...
                               -1       -2                -1       -2
                      1 + a11 z  + a12 z         1 + a21 z  + a22 z

             Where the filter coefficients are represented by a single column
             series in the following order:

             G, b10, b11, b12, a11, a12, b20, b21, b22, a21, a22, ...

             For cascade coefficients, performing IIR filtering
             directly in the time domain is recommended for numerical
             stability and speed.

             If C contains 2 columns, the coefficients are assumed to
             be in direct form, where the first column is B and the
             second column is A.  In this case, IIRFILTER uses FILTEQ
             to evaluate N uniformly spaced samples over the unit
             circle of a Z transform in direct form:
  
                                        -1                 -Q
                    Y(z)   b[1] + b[2]*z   + ... + b[Q+1]*z
             H(z) = ---- = -------------------------------------
                                        -1                 -P
                    X(z)    1   + a[2]*z   + ... + a[P+1]*z


                        jw
             where z = e    unit circle (frequency response)
                   Q        order of zeros (numerator)
                   P        order of poles (denominator)


             The sample rate of the result is determined by the
             sample rate of the input series and the rate of the filter 
             coefficients. If the sample rates are not equal, the sample
             rate of the output is set to 1.0.

             See IIRFILTERF for an FFT based frequency domain implementation.

             See FILTDATA for a time domain implementation with filter
             coefficients in Direct form.

             See FIRFILTER for a time domain implementation with filter
             coefficients in FIR form.

    See Also:
             Conv
             Fft
             Filtdata
             Filtdataf
             Filteq
             Fir
             Firfilter
             Firfilterf
             Iir
             Iirfilterf
